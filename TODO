{
	"soon": [
		"Sort out compression methods and optimizations. At this point the Compression will run in the same process as node. It would be better if another process would be spawned and compression / decompression would occur there",
		"Research the ability to leverage http://www.fastlz.org/ for compression on Node.js creating custom c bindings",
		"Node-compress could be an option in the future but it requires to have library pre-installed: http://github.com/waveto/node-compress/"
	],
	
	"critical": [
		{
			"modules": [ "./lib/utils" ],
			"description:": "Add replaceServer and removeServer functionality to our HashRing, so we remove dead servers and still have good working key chain"
		},
		{
			"modules": [ "nMemcached", "./lib/connection" ],
			"description:": "Once a connection stream dies, we need to call all queued metaData's callback's and mark the as a cache miss. So users can expect that the callback will always be called. No matter what happens."
		}
	],
	
	"features": [
		{
			"modules": [ "nMemcached" ],
			"description": "Automated partitioning for larger values over different servers."
		}
		
	],
	
	"commands": [
		"multiset",
		"cas"
	]
}